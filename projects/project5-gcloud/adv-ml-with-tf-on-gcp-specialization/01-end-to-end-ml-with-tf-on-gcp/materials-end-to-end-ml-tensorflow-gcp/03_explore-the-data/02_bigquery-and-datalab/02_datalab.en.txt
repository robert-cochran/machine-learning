Besides BigQuery, the other piece of technology you will use in the first lab is Cloud Datalab. This is the Jupiter notebook that you can use to run Python code. It handles authentication to GCP, so that you can easily access BigQuery. Datalab notebooks are developed in an iterative collaborative process. You can write code in Python. You can hit the Run button, and the output shows up right on the page itself. Along with the code, you can write commentary in markdown format and share the notebook with your colleagues. This is what the user interface looks like; number 1 is a Python code. In this case, it's a plot command. So, when you hit the Run button, you get the graph as shown by Number 3. You can add Markdown text that's shown in number 4 and share the notebook and that's number 5. Datalab works with the same technologies you're familiar with, so you can start developing now and then work on scale later. For example, we will be doing an exercise where we read from a CSV File and then you can process the data in Pandas and Apache Beam before training your model in TensorFlow and then improve the model to through training. Eventually though, when you're ready to scale, you can use Google Cloud Storage to hold your data initially. Process it in Cloud Dataflow on an ephemeral cluster, and then run distributed training and hyper-parameter optimization on Cloud ML Engine. Cloud also frees you from being constrained by hardware limitations not only can you run Datalab on any Compute Engine instance that you want, you can also change the machine specs after it's been provisioned. You can go into the web console find the running VM stop it and restart it with a new machine configuration. As a developer, to work in Datalab, you simply connect to the VM that's running the notebook server. The notebook themselves can be persisted in Git or in a Cloud repository, so you can delete the VM if you don't need it anymore. When you run the notebook, the computation is carried out on the Compute Engine instance. To Start Up Cloud Datalab, you go into Cloud Shell and you type in Datalab create. If you have G-Cloud installed on your local computer, you can run this Datalab create command from your own computer instead of from Cloud Shell. Finally, if you prefer some other Jupiter environment, perhaps you use Jupiter lab or you use Colab from Google. Py Datalab is available as a Python package, you can simply install the package and you can get all of the GCP authentication things that we rely on in parts of this course.