1
00:00:00,000 --> 00:00:03,120
Hi, I'm Chris Rawls and I am

2
00:00:03,120 --> 00:00:05,280
a machine learning specialist here within

3
00:00:05,280 --> 00:00:08,835
Google Cloud where I build machine learning models for customers.

4
00:00:08,835 --> 00:00:12,135
Right now, I'm going to walk you through our first lab on

5
00:00:12,135 --> 00:00:16,615
exploring and visualizing the baby weight dataset. All right.

6
00:00:16,615 --> 00:00:18,870
Let's get started on our first lab,

7
00:00:18,870 --> 00:00:22,840
on exploring and visualizing our baby weight dataset.

8
00:00:22,840 --> 00:00:27,050
So, the first thing we need to do is make sure that we have

9
00:00:27,050 --> 00:00:31,310
launched Qwiklabs and we have an active Datalab instance open.

10
00:00:31,310 --> 00:00:33,749
So, if you have not done it already,

11
00:00:33,749 --> 00:00:38,020
open up Qwiklabs and go ahead and click Start Lab.

12
00:00:38,140 --> 00:00:42,880
Once you do that, connect to your Datalab instance.

13
00:00:42,880 --> 00:00:47,005
Once you do, you will look at a screen similar to this one.

14
00:00:47,005 --> 00:00:49,010
What we want to do is,

15
00:00:49,010 --> 00:00:51,680
in the training-data-analyst repo,

16
00:00:51,680 --> 00:00:53,405
we want to go to courses,

17
00:00:53,405 --> 00:00:58,755
machine-learning, deep dive and 06_structured.

18
00:00:58,755 --> 00:01:02,495
So for this, the duration of this section,

19
00:01:02,495 --> 00:01:06,850
we will proceed throughout all six of these labs.

20
00:01:06,850 --> 00:01:10,220
But for right now, we're going to start on

21
00:01:10,220 --> 00:01:13,100
the first lab for exploring and visualizing our data set.

22
00:01:13,100 --> 00:01:16,050
So, let's go ahead and look at that lab.

23
00:01:16,050 --> 00:01:20,365
Great. So, now with this lab open in Datalab,

24
00:01:20,365 --> 00:01:22,545
we want to start exploring,

25
00:01:22,545 --> 00:01:24,475
visualizing the natality dataset.

26
00:01:24,475 --> 00:01:26,380
So, what's the goal of this lab?

27
00:01:26,380 --> 00:01:30,620
Well the goal really is to get a handle on our dataset, right?

28
00:01:30,620 --> 00:01:33,680
Presumably, this is a brand new dataset we've never seen before,

29
00:01:33,680 --> 00:01:37,070
and we need to figure out what we actually have in this dataset.

30
00:01:37,070 --> 00:01:38,690
If we think about our goal,

31
00:01:38,690 --> 00:01:40,420
our goal here is to,

32
00:01:40,420 --> 00:01:43,550
given attributes about a baby and the mother,

33
00:01:43,550 --> 00:01:46,485
trying to determine the weight of the baby.

34
00:01:46,485 --> 00:01:49,520
So, number one, this means it's going to be a regression problem.

35
00:01:49,520 --> 00:01:51,200
So, we're trying to figure out,

36
00:01:51,200 --> 00:01:54,795
we're trying to analyze the baby weight value.

37
00:01:54,795 --> 00:01:57,590
So, let's think more about the goal that we're trying to do,

38
00:01:57,590 --> 00:02:01,000
we're trying to predict the weight of the baby.

39
00:02:01,510 --> 00:02:06,050
The first step we want to do before we even dive into model building is,

40
00:02:06,050 --> 00:02:08,275
make sure we understand the data.

41
00:02:08,275 --> 00:02:11,420
One thing that you will notice is that,

42
00:02:11,420 --> 00:02:13,220
this is a relatively large dataset,

43
00:02:13,220 --> 00:02:16,855
we have over 100 million rows in our BigQuery data set.

44
00:02:16,855 --> 00:02:22,805
So, it's definitely not going to fit into our local instance of our Datalab.

45
00:02:22,805 --> 00:02:24,395
So, what are we going to do?

46
00:02:24,395 --> 00:02:29,735
What we're going to have to aggregate our data using the group by clause with BigQuery,

47
00:02:29,735 --> 00:02:34,245
so we can bring our data in locally for visualization.

48
00:02:34,245 --> 00:02:35,770
Then once we finish this lab,

49
00:02:35,770 --> 00:02:39,495
then we can actually move on and start to do machine learning.

50
00:02:39,495 --> 00:02:41,815
So, let's walk through this lab.

51
00:02:41,815 --> 00:02:46,330
I'm going to use the Shift Enter keyboard shortcut which will allow you

52
00:02:46,330 --> 00:02:50,695
to jump from cell to cell instead of having to click Run.

53
00:02:50,695 --> 00:02:53,200
You can also hit click the Run button as well.

54
00:02:53,200 --> 00:02:55,535
So, if we look at this lab,

55
00:02:55,535 --> 00:02:57,035
what we're going to need to do is,

56
00:02:57,035 --> 00:02:59,665
we're going to specify the bucket project in region.

57
00:02:59,665 --> 00:03:01,810
This will be specific to you,

58
00:03:01,810 --> 00:03:04,514
and you will set them appropriately.

59
00:03:04,514 --> 00:03:08,465
So once we do that, we're going to set these values,

60
00:03:08,465 --> 00:03:10,215
we'll set them as environmental variables,

61
00:03:10,215 --> 00:03:13,180
so we can easily access them later.

62
00:03:13,180 --> 00:03:15,110
If you didn't already have that bucket created,

63
00:03:15,110 --> 00:03:18,290
this command will create that bucket for you.

64
00:03:19,480 --> 00:03:24,920
So, let's actually run some SQL queries and look at the data that we have.

65
00:03:24,920 --> 00:03:28,225
So, you'll look at this example query that we have.

66
00:03:28,225 --> 00:03:30,590
Again, you could have written any query that you wanted,

67
00:03:30,590 --> 00:03:32,300
but this is a nice starting out query.

68
00:03:32,300 --> 00:03:34,520
So, what this is doing is it's selecting

69
00:03:34,520 --> 00:03:38,810
some potentially really interesting features that we can use for our model,

70
00:03:38,810 --> 00:03:40,145
like weight in pounds,

71
00:03:40,145 --> 00:03:43,220
the sex of the baby, mother age and other ones.

72
00:03:43,220 --> 00:03:47,045
We're also using a FARM_FINGERPRINT function,

73
00:03:47,045 --> 00:03:49,580
which we'll talk more about later.

74
00:03:49,890 --> 00:03:55,425
You can see we're we're limiting to all burst after the year 2000.

75
00:03:55,425 --> 00:03:59,830
So with that, we've assigned the result to a query string.

76
00:04:00,180 --> 00:04:06,055
From there, we want to import the BigQuery module as BQ,

77
00:04:06,055 --> 00:04:07,840
and we'll run this command right here,

78
00:04:07,840 --> 00:04:11,615
which will basically take that string that we've created,

79
00:04:11,615 --> 00:04:17,335
execute the result in big query and return the result back as a pandas dataframe.

80
00:04:17,335 --> 00:04:20,400
So if you look at this, we can df.head,

81
00:04:20,400 --> 00:04:24,995
which returns the first five results,

82
00:04:24,995 --> 00:04:27,980
and we can analyze them right here.

83
00:04:28,100 --> 00:04:37,250
So now, this is interesting but we've limited our results to the top to 100.

84
00:04:37,250 --> 00:04:41,580
We know that there's 10 of millions over 100 million examples.

85
00:04:41,580 --> 00:04:44,230
So, this isn't going to get us exactly where we need to go.

86
00:04:44,230 --> 00:04:46,840
While this is interesting to get a first take,

87
00:04:46,840 --> 00:04:48,900
we need to go beyond this.

88
00:04:48,900 --> 00:04:51,405
So, what we can do is,

89
00:04:51,405 --> 00:04:57,965
we can create a generalized function to query columns of interests that we want.

90
00:04:57,965 --> 00:05:01,655
If you think about it, there's a couple of key things that we're interested in.

91
00:05:01,655 --> 00:05:04,080
Number one, we're interested in,

92
00:05:04,080 --> 00:05:06,290
for each value of that column,

93
00:05:06,290 --> 00:05:09,350
what is the count as in the number of babies?

94
00:05:09,350 --> 00:05:12,965
What is the average weight for that column value?

95
00:05:12,965 --> 00:05:14,825
This will become more apparent.

96
00:05:14,825 --> 00:05:18,730
But this is an example query that you could use to analyze your data set,

97
00:05:18,730 --> 00:05:22,460
and we'll use the string formatting function which allows us basically said,

98
00:05:22,460 --> 00:05:26,340
"Given this column name plug this into the SQL query."

99
00:05:26,340 --> 00:05:28,720
So, whenever we call get distinct values,

100
00:05:28,720 --> 00:05:35,120
we'll get two fields of interests: The count and the average weight.

101
00:05:38,180 --> 00:05:45,455
So here, we have a bar plot to see the gender of the baby.

102
00:05:45,455 --> 00:05:47,690
Here, let's call the distinct values code.

103
00:05:47,690 --> 00:05:48,800
We already have the result,

104
00:05:48,800 --> 00:05:52,650
but I'm going to call it again so we can visualize it.

105
00:05:55,610 --> 00:05:58,270
What we can see is,

106
00:05:58,270 --> 00:06:02,165
we can look at the count which is the y axis by sex.

107
00:06:02,165 --> 00:06:04,499
So, in this case is_male false,

108
00:06:04,499 --> 00:06:05,945
so blue means female,

109
00:06:05,945 --> 00:06:09,220
green means male for the sex of the baby.

110
00:06:09,220 --> 00:06:13,640
You can see there's a slight difference here in terms of the count,

111
00:06:13,640 --> 00:06:15,910
but what we're also more interested in,

112
00:06:15,910 --> 00:06:17,930
is there a difference in the weight of the baby, right?

113
00:06:17,930 --> 00:06:20,900
Because this is what we're ultimately trying to predict.

114
00:06:20,900 --> 00:06:23,330
It looks like there may be some difference,

115
00:06:23,330 --> 00:06:25,520
so this is something to definitely note,

116
00:06:25,520 --> 00:06:28,590
and it may be something that we want to include in our model.

117
00:06:29,150 --> 00:06:36,260
So here, we're going to plot the mother's age with respect to average weight.

118
00:06:36,260 --> 00:06:39,680
In this case, we're going to actually be making a line plot and the way that we've

119
00:06:39,680 --> 00:06:44,495
specified that is it defaults to line plots.

120
00:06:44,495 --> 00:06:48,640
But above, we specified that we want to use a bar plot.

121
00:06:48,640 --> 00:06:51,515
There's other types that we can plot as well including

122
00:06:51,515 --> 00:06:54,935
a bar H for horizontal bar plot as well.

123
00:06:54,935 --> 00:06:56,980
I guess as a quick aside,

124
00:06:56,980 --> 00:06:58,845
this is using Pandas for plotting,

125
00:06:58,845 --> 00:07:03,020
and pandas is a very concise way to plot data,

126
00:07:03,020 --> 00:07:09,775
so it's definitely worth getting the handle on.

127
00:07:09,775 --> 00:07:13,080
So, let's look at the results of mother age.

128
00:07:13,080 --> 00:07:15,385
So again, this is the count.

129
00:07:15,385 --> 00:07:21,105
So, you can see start at the most common mother ages between 20 and 30 years old,

130
00:07:21,105 --> 00:07:24,350
which makes intuitive sense as well,

131
00:07:24,350 --> 00:07:30,290
but let's see if there's actually a correlation between mother age and baby weight.

132
00:07:30,290 --> 00:07:34,465
Well, it looks like there is a pretty strong relationship.

133
00:07:34,465 --> 00:07:39,270
Now, is this a linear relationship? No, it's not.

134
00:07:39,270 --> 00:07:41,284
It's actually a non-linear relationship.

135
00:07:41,284 --> 00:07:44,570
So, an increase in mother's age may or may not cause

136
00:07:44,570 --> 00:07:48,900
an increase in baby weight depending on the age of the mother.

137
00:07:52,090 --> 00:07:54,535
Let's also plot plurality,

138
00:07:54,535 --> 00:07:57,400
the plurality is the number of babies born at once.

139
00:07:57,400 --> 00:07:59,980
So, plurality equals two means twins,

140
00:07:59,980 --> 00:08:03,080
plurality equals three means triplets.

141
00:08:03,120 --> 00:08:06,885
So, let's look at the count by plurality.

142
00:08:06,885 --> 00:08:09,930
So not surprisingly, most mothers

143
00:08:09,930 --> 00:08:16,620
have one child at a time as opposed to twins, triplets et cetera.

144
00:08:17,290 --> 00:08:20,365
We can also look at the relationship between

145
00:08:20,365 --> 00:08:24,590
baby weight which is the y-axis and plurality as well.

146
00:08:24,590 --> 00:08:27,470
So again, this is a pretty strong relationship.

147
00:08:27,470 --> 00:08:31,025
So, if we know the plurality that's going to give us some indication,

148
00:08:31,025 --> 00:08:33,270
some signal for trying to predict baby weight.

149
00:08:33,270 --> 00:08:37,150
So, this is definitely a good feature that we're going to want to use in our model,

150
00:08:37,940 --> 00:08:41,175
and we can also look at gestation weeks.

151
00:08:41,175 --> 00:08:42,840
What is gestational weeks?

152
00:08:42,840 --> 00:08:46,780
That's essentially how long the mother was pregnant with the baby.

153
00:08:46,780 --> 00:08:51,950
Again, we're going to be using a bar plot here which is where we say kind equals bar.

154
00:08:51,950 --> 00:08:58,010
One thing we can also specify is log y equals true,

155
00:08:58,010 --> 00:09:00,975
so we're going to get log axis for the y value.

156
00:09:00,975 --> 00:09:03,830
If you're ever curious about what arguments you can put into pandas,

157
00:09:03,830 --> 00:09:08,125
one trick you can do is to shift and hold tab in Datalab,

158
00:09:08,125 --> 00:09:11,780
or hit tab, and you'll be able to see documentation on the side.

159
00:09:11,780 --> 00:09:16,280
This is really helpful if you're like me and you tend to forget the arguments.

160
00:09:16,280 --> 00:09:19,070
You can always use this as reference,

161
00:09:19,070 --> 00:09:24,850
but now we can close that backup.

162
00:09:25,080 --> 00:09:29,730
Here, we can look at the number of babies born by gestational weeks.

163
00:09:29,730 --> 00:09:34,880
So, we can see that about 39 weeks seems to be sort of

164
00:09:34,880 --> 00:09:40,420
the most common gestational weeks and it falls off in both directions.

165
00:09:40,420 --> 00:09:43,460
Let's see if there's a correlation in baby weight.

166
00:09:43,460 --> 00:09:49,040
Interesting, the longer the gestation weeks the larger the baby weight is.

167
00:09:49,040 --> 00:09:51,960
I think this makes intuitive sense as well.

168
00:09:53,160 --> 00:09:57,480
Great. All these factors seem to play a part in baby weight.

169
00:09:57,480 --> 00:10:01,400
This is encouraging, this is telling us that there's actually some signal in the data,

170
00:10:01,400 --> 00:10:04,340
and that now, we're actually ready to move on

171
00:10:04,340 --> 00:10:07,890
and start creating our first machine learning model for the baby weight.

172
00:10:07,890 --> 00:10:10,490
That's it for today's lab.

173
00:10:10,490 --> 00:10:14,905
We have now completed the initial steps of our end-to-end machine learning problem,

174
00:10:14,905 --> 00:10:18,230
analyzing a dataset and visualizing a dataset.

175
00:10:18,230 --> 00:10:22,895
Next, we will begin our process of creating our dataset for analysis.

176
00:10:22,895 --> 00:10:25,790
Key steps here will include data cleansing,

177
00:10:25,790 --> 00:10:27,770
feature engineering and creating

178
00:10:27,770 --> 00:10:30,020
repeatable samples that we can use for

179
00:10:30,020 --> 00:10:33,440
training and evaluating our machine learning model.